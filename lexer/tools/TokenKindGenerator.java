package lexer.tools;

import java.io.FileWriter;
import java.io.IOException;
import java.util.List;

import config.LexerConfiguration;

public class TokenKindGenerator extends TokenTool {
  private int tokenCount;

  private String sourceCodePrefix = String.join("", List.of(
      String.format("package %s.%s;", LexerConfiguration.LEXER_PACKAGE, LexerConfiguration.DAO_PACKAGE),
      this.getNewLines(2),
      this.getAutoGeneratedWarning(),
      this.getNewLines(1),
      String.format("public enum %s {", LexerConfiguration.TOKEN_KIND_CLASS_NAME),
      this.getNewLines(1),
      this.getIndentation(1),
      this.getComment("Special TokenKind for internal use"),
      this.getNewLines(1),
      this.getIndentation(1),
      "BogusToken,",
      this.getNewLines(1),
      this.getIndentation(1),
      this.getComment("Generated TokenKinds"),
      this.getNewLines(1),
      this.getIndentation(1)));

  private String sourceCodeSuffix = String.join("", List.of(
      this.getNewLines(1),
      this.getIndentation(1),
      this.getComment("Special TokenKind for internal use"),
      this.getNewLines(1),
      this.getIndentation(1),
      "EOF",
      this.getNewLines(1),
      "}",
      this.getNewLines(1)));

  @Override
  public void regenerateSourceFile() {
    try (FileWriter writer = new FileWriter(LexerConfiguration.TOKEN_KIND_FILE_PATH.toFile())) {
      writer.write(sourceCodePrefix);
      this.tokenCount = 1;

      while (this.hasNext()) {
        writer.write(String.format("%s, ", this.nextTokenKind()));

        if (this.tokenCount++ % 5 == 0) {
          writer.write(this.getNewLines(1));
          writer.write(this.getIndentation(1));
        }
      }

      writer.write(sourceCodeSuffix);
    } catch (IOException exception) {
      this.failExecution(exception);
    }
  }

  private String nextTokenKind() {
    String line = this.next();

    return line.split("\\s+")[0];
  }
}
